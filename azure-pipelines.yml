# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

# steps:
# - script: 
#     cd webapp
#     dotnet build --configuration $(buildConfiguration)
#   displayName: 'dotnet build $(buildConfiguration)'

steps:
- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    projects: '**/*.csproj'
    arguments: '--configuration Release' # Update this to match your need

# Extract Files
# Extract a variety of archive and compression files such as .7z, .rar, .tar.gz, and .zip.
- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '/home/vsts/work/1/s/mysong/bin/Release/netcoreapp2.1/publish.zip' 
    # destinationFolder: '/home/vsts/work/1/s/mysong/bin/Release/netcoreapp2.1/publish'
    destinationFolder: '/publish'
    cleanDestinationFolder: true
  
- script: pwd
  displayName: Get the location

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: |
     /home/vsts/work/1/s/*.ps1
     /home/vsts/work/1/s/appspec.yml
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- script: ls -al
  displayName: Get the files

# Archive Files
# Compress files into .7z, .tar.gz, or .zip.
# - task: ArchiveFiles@2
#   inputs:
#     rootFolderOrFile: '$(Build.ArtifactStagingDirectory)' 
#     includeRootFolder: false 
#     archiveType: 'zip' # Options: zip, 7z, tar, wim
#     #tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
#     archiveFile: 'example_app.zip' 
#     #replaceExistingArchive: true 
#     #verbose: # Optional
#     #quiet: # Optional

